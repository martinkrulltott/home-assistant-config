#Outside lights
- alias: Turn Outside Lights On at Sunset
  trigger:
  - event: sunset
    offset: -0:15
    platform: sun
  action:
  - data:
      entity_id: group.outside_lights
      brightness: 255
    service: homeassistant.turn_on

#Inside lights
- alias: Turn Inside Lights On at Sunset
  trigger:
  - event: sunset
    offset: -0:30
    platform: sun
  action:
  - data:
      entity_id: group.inside_lights
    service: homeassistant.turn_on

- alias: Activate Sleeping at Sleep Time
  trigger:
  - platform: template
    value_template: "{{ states('sensor.time') == (state_attr('input_datetime.sleep_time', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
  action:
  - data:
      entity_id: input_boolean.sleeping
    service: input_boolean.turn_on

- alias: Turn off some lights at Sleeping
  trigger:
  - platform: state
    entity_id: input_boolean.sleeping
    to: 'on'
  action:
  - service: scene.turn_on
    entity_id: scene.sleeping

#Sunrise
- alias: Turn All Off at Sunrise
  trigger:
  - event: sunrise
    offset: +01:30
    platform: sun
  action:
  - data:
      entity_id: group.home_lights
    service: homeassistant.turn_off
  - data:
      entity_id: input_boolean.sleeping
    service: input_boolean.turn_off

#Night light
- alias: Turn Night Lights On by Motion Detected
  trigger:
    - platform: state
      entity_id: binary_sensor.tradfri_motion_sensor_3
      to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.sleeping
    state: 'on'
  action:
  - data:
      entity_id: 
        - switch.plug_4
    service: homeassistant.turn_on
- alias: Turn Night Lights Off Automatically
  trigger:
    - platform: state
      entity_id: binary_sensor.tradfri_motion_sensor_3
      to: 'off'
      for:
        minutes: 5
        seconds: 00
  condition:
    condition: and
    conditions:
      - condition: time
        after: '00:10:00'
      - condition: sun
        before: sunrise
  action:
  - data:
      entity_id: 
        - switch.plug_4
    service: homeassistant.turn_off

#Dimmer
- alias: Dimmer On
  trigger:
    platform: state
    entity_id: sensor.tradfri_wireless_dimmer_battery_level
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state|int != 0 }}"
  action:
    service: light.turn_on
    entity_id: light.outside_lights
    data_template:
      brightness: "{{ trigger.to_state.state|int }}"

# Low indoor temperature
# - alias: Low Temperature Alert
#   trigger:
#     platform: template
#     value_template: "{{ state_attr('climate.steninge', 'current_temperature') < states('input_number.min_temp_threshold') }}"