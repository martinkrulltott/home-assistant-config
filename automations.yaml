# Turn On Lights at Sunset
- alias: Change to Evening Scene at Sunset
  trigger:
  - event: sunset
    #offset: -0:30
    platform: sun
  action:
  - service: scene.turn_on
    data_template:
      entity_id: >
        {% if is_state('input_boolean.away', 'on') %}
          scene.evening_away
        {% else %}
          scene.evening
        {% endif %}
  - condition: state
    entity_id: input_boolean.away
    state: 'on'
  - service: input_datetime.set_datetime
    data_template:
      entity_id: input_datetime.sleep_time
      time: "{{ (range(22, 23)|random|int) }}:{{ (range(0, 59)|random|int) }}:00"

# Inside lights
- alias: Activate Sleeping at Sleep Time
  trigger:
  - platform: template
    value_template: "{{ states('sensor.time') == (state_attr('input_datetime.sleep_time', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
  action:
  - service: homeassistant.turn_on
    data:
      entity_id: 
        - input_boolean.sleeping

- alias: Change to Sleeping Scene at Sleeping Boolean
  trigger:
  - platform: state
    entity_id: input_boolean.sleeping
    to: 'on'
  action:
  - service: scene.turn_on
    data_template:
      entity_id: >
        {% if is_state('input_boolean.away', 'on') %}
          scene.sleeping_away
        {% else %}
          scene.sleeping
        {% endif %}

# Sunrise, Turn All Off at Sunrise
- alias: Change to Day Scene at Sunrise
  trigger:
  - event: sunrise
    offset: +01:30
    platform: sun
  action:
  - service: scene.turn_on
    entity_id: scene.day
  - data:
      entity_id: input_boolean.sleeping
    service: input_boolean.turn_off

# Night light
- alias: Turn Night Lights On by Motion Detected
  trigger:
    - platform: state
      entity_id: binary_sensor.tradfri_motion_sensor_3
      to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.sleeping
    state: 'on'
  action:
  - data:
      entity_id: 
        #- switch.plug_1
        - switch.plug_4
    service: homeassistant.turn_on

- alias: Turn Night Lights Off Automatically
  trigger:
    - platform: state
      entity_id: binary_sensor.tradfri_motion_sensor_3
      to: 'off'
      for: "00:05:00"
  condition:
    condition: state
    entity_id: input_boolean.sleeping
    state: 'on'
  action:
  - data:
      entity_id: 
        #- switch.plug_1
        - switch.plug_4
    service: homeassistant.turn_off

# Dimmer
- alias: Dimmer On
  trigger:
    platform: state
    entity_id: sensor.tradfri_wireless_dimmer_battery_level
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state|int != 0 }}"
  action:
    - service: light.turn_on
      entity_id: light.light_1
      data_template:
        brightness: "{{ trigger.to_state.state|int }}"
    - service: light.turn_on
      entity_id: light.light_2
      data_template:
        brightness: "{{ trigger.to_state.state|int }}"

# Detect presence
- alias: Turn Off Away On Presence Detected
  trigger:
    - platform: state
      entity_id: binary_sensor.tradfri_motion_sensor_3
      to: 'on'
    - platform: state
      entity_id: device_tracker.ms10
      to: 'home'
    - platform: state
      entity_id: device_tracker.hi6s
      to: 'home'
  condition:
    condition: state
    entity_id: input_boolean.away
    state: 'on'
  action:
  - service: homeassistant.turn_off
    data:
      entity_id: 
        - input_boolean.away
  - service: persistent_notification.create
    data: 
      title: "Motion"
      message: "Presence (motion or wifi) detected, away mode turned OFF"

# Home again
- alias: Turn Everything On When Home Again
  trigger:
    - platform: state
      entity_id: input_boolean.away
      to: 'off'
  action:
  - service: input_datetime.set_datetime
    data_template:
      entity_id: input_datetime.sleep_time
      time: "23:45"
  - condition: state  # from sunset until sunrise
    entity_id: sun.sun
    state: 'below_horizon'
  - service: scene.turn_on
    entity_id: scene.evening
  - service: persistent_notification.create
    data: 
      title: "Home"
      message: "Welcome home again, turning everything ON!"

- alias: Turn On Away After No Motion
  trigger:
    - platform: state
      entity_id: binary_sensor.tradfri_motion_sensor_3
      to: 'off'
      for: "08:00:00"
  action:
  - service: homeassistant.turn_on
    data:
      entity_id: 
        - input_boolean.away
  - service: persistent_notification.create
    data: 
      title: "No motion"
      message: "No presence for 8h, away mode turned ON"

- alias: Turn On Away Automatically (Backup)
  trigger:
    - platform: time
      at: "12:00:00"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.away
        state: 'off'
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.binary_sensor.tradfri_motion_sensor_3.last_changed) > 21600 }}"
        # 21600 = 6h ago
  action:
  - service: homeassistant.turn_on
    data:
      entity_id: 
        - input_boolean.away
  - service: persistent_notification.create
    data: 
      title: "No motion"
      message: "It's mid day and no presence for, away mode turned ON"

# Low indoor temperature
# - alias: Low Temperature Alert
#   trigger:
#     platform: template
#     value_template: "{{ state_attr('climate.steninge', 'current_temperature') < states('input_number.min_temp_threshold') }}"