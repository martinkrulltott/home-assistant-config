# Sunset, Lights On
- alias: Scene Evening at Sunset
  trigger:
  - event: sunset
    offset: -00:45:00
    platform: sun
  action:
  - service: homeassistant.turn_on
    data:
      entity_id: 
        - script.scene_evening
    # data_template:
    #   entity_id: >
    #     {% if is_state('input_boolean.away', 'on') %}
    #       scene.evening_away
    #     {% else %}
    #       scene.evening
    #     {% endif %}
  - condition: state
    entity_id: input_boolean.away
    state: 'on'
  - service: input_datetime.set_datetime
    data_template:
      entity_id: input_datetime.sleep_time
      time: "{{ (range(22, 23)|random|int) }}:{{ (range(0, 59)|random|int) }}:00"


# Sleeping
- alias: Sleeping at Sleep Time
  trigger:
  - platform: template
    value_template: "{{ states('sensor.time') == (state_attr('input_datetime.sleep_time', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
  action:
  - service: homeassistant.turn_on
    data:
      entity_id: 
        - input_boolean.sleeping

- alias: Scene Sleeping at Sleeping Boolean
  trigger:
  - platform: state
    entity_id: input_boolean.sleeping
    to: 'on'
  action:
  - service: homeassistant.turn_on
    data_template:
      entity_id: >
        {% if is_state('input_boolean.away', 'on') %}
          script.scene_sleeping_away
        {% else %}
          script.scene_sleeping
        {% endif %}
  - service: homeassistant.turn_on
    data:
      entity_id: 
        - script.scene_sleeping

# Sunrise, Turn All Off at Sunrise
- alias: Scene Day at Sunrise
  trigger:
  - event: sunrise
    offset: +00:30:00
    platform: sun
  action:
  - service: homeassistant.turn_on
    entity_id: script.scene_day
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sleeping
  - condition: state
    entity_id: device_tracker.mmbp
    state: 'home'
  - condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  - condition: state
    entity_id: input_boolean.wake_up_light
    state: 'on'
  - condition: template
    value_template: "{{ states('sensor.time') > (state_attr('input_datetime.wake_up_time', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
  - service: light.turn_on
    data:
      entity_id: light.kontor_tak
      brightness_pct: 100
      rgb_color: [255,182,109]
      transition: 0